文件传输文档

基本逻辑：
发送端：
每台设备启动时开启服务，默认打开config.js中FTPORT端口，并监听该端口的消息。调用方法如下：
var sender = require('./fileTransfer.js');
sender.initServer();
当监听到有消息到达时，解析消息前5个字符是否为'START'，如果是则该条消息为接收端所请求的目标文件的结对路径。取出该文件名，调用 sendfile(socket,FILEPATH) 函数开始发送文件。文件传输的机制是将文件读入一个文件流（file read stream）并将文件流用pipe（）函数写入socket通道。当读取文件的完毕时，文件流会自动关闭。服务则会继续保持监听，等到下一次请求文件发送的消息到达。

接收端：
如果本设备获取到所需文件的列表，则可根据列表上的文件信息，向对方设备请求获取文件。调用方法如下：
var receiver = require('./fileTransfer.js');
receiver.startReceiving(FILEPATH,HOST);
该方法需要传入目标文件的绝对路径（目前的设计），以及对方设备的IP。
当启动文件接受时，会通过config.js中FTPORT端口和传入的IP参数与目标socket通道进行连接，并打开一个文件写入流（file write stream）等待接受文件数据。连接成功后，会向对方设备发送一条消息。格式如下：
'START'+FILENAME
对方设备发送端收到后，如果解析成功则会将目标文件通过socket通道传输过来。通过对socket通道持续监听，每当有消息到达时就写入文件流。当socket通道关闭时，文件流同时关闭，墓表文件接受完成。
